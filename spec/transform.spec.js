// Generated by CoffeeScript 1.12.4
(function() {
  var Transform, World, expect;

  expect = require('chai').expect;

  Transform = require('../lib/support/Transform.js');

  World = require('../lib/support/World.js').World;

  describe('transform', function() {
    var transform;
    transform = new Transform();
    it('should exist on the World', function() {
      var world;
      world = new World(function() {});
      return expect(world.transform).to.be.an.instanceOf(Transform);
    });
    describe('shouldToBoolean()', function() {
      it('should convert the string "should" to true', function() {
        return expect(transform.shouldToBoolean('should')).to.equal(true);
      });
      return it('should convert the string "should not" to false', function() {
        return expect(transform.shouldToBoolean('should not')).to.equal(false);
      });
    });
    describe('stringToVariableName()', function() {
      it('should make the first letter of a string lower case', function() {
        return expect(transform.stringToVariableName('Test')).to.equal('test');
      });
      it('should not affect letters after the first letter', function() {
        return expect(transform.stringToVariableName('TEST')).to.equal('tEST');
      });
      it('should remove spaces', function() {
        return expect(transform.stringToVariableName('Test String')).to.equal('testString');
      });
      return it('should replace "&" with "And"', function() {
        return expect(transform.stringToVariableName('Tom & Jerry')).to.equal('tomAndJerry');
      });
    });
    return describe('elementTypeToVariableName()', function() {
      it('should convert the string "drop down list" to "Select"', function() {
        return expect(transform.elementTypeToVariableName('drop down list')).to.equal('Select');
      });
      return it('should capitalize the first letter of other strings and pass them through', function() {
        return expect(transform.elementTypeToVariableName('button')).to.equal('Button');
      });
    });
  });

}).call(this);
